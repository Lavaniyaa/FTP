# Generated by binpac_quickstart

refine flow FTPDEMO_Flow += {
	function proc_ftpdemo_message(msg: FTPDEMO_PDU): bool
		%{
//		 printf("\n FTP is found!!");
//		 std::cout<<std::hex<<${msg.request_line.request}.data();
		 unsigned char *reply = ${msg.reply_line.reply}.data();
		 unsigned char *request = ${msg.request_line.request}.data();
                 char trim_data[2];
		 char trim_command[10];
		 char trim_command_args[22];
                 char zip_signature[] = "PK";
		 char exe_signature[] = "MZ";
		 char passive[] = "227";
		 char* strvalue = reinterpret_cast<char*>(reply);
		 char* reqvalue = reinterpret_cast<char*>(request);
                 //cout<<"\n"<<reqvalue;
		 strncpy(trim_data,strvalue,sizeof(trim_data));
		 strncpy(trim_command,strvalue,sizeof(trim_command));
		 cout<<"\n"<<trim_command;
		 if(!(strcmp(zip_signature,trim_data)))
			cout<<"\n Its a zip file!!";
		 if(!(strcmp(exe_signature,trim_data)))
			cout<<"\n Its an exe file!!";
		 if(!(strcmp(passive,trim_command)))
			cout<<"\n Its a PASV response"<<strvalue;
//		 std::cout<<std::hex<<${msg.reply_line.reply}.data();
		 return true;
		%}
};

refine typeattr FTPDEMO_PDU += &let {
	proc: bool = $context.flow.proc_ftpdemo_message(this);
};
